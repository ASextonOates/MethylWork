# Estimate cell counts using minfi
# Requires rgset

# Libraries
library(minfi)
# As required
library(FlowSorted.Blood.450k)
library(FlowSorted.DLPFC.450k)
library(FlowSorted.CordBlood.450k)

# Blood
counts = estimateCellCounts(rgset, compositeCellType='Blood', meanPlot = FALSE, cellTypes = c("CD8T","CD4T", "NK","Bcell","Mono","Eos","Neu"), returnAll=TRUE, quantileNormalize = TRUE, stratified = TRUE)

# Cord blood
counts = estimateCellCounts(rgset, compositeCellType='CordBlood', meanPlot = FALSE, cellTypes = c("Bcell", "CD4T", "CD8T", "Gran", "Mono", "NK", "nRBC"), returnAll=TRUE, quantileNormalize = TRUE, stratified = TRUE)

# DLPFC
counts = estimateCellCounts(rgset, compositeCellType='DLPFC', meanPlot = FALSE, cellTypes = c("NeuN_neg", "NeuN_pos"), returnAll=TRUE, quantileNormalize = TRUE, stratified = TRUE)

## Sometimes receive an error due to differing number of probes in early versions of the EPIC array, use the patch below

# Make table of cell counts for each samples
cellcounts = round(as.matrix(counts$counts),2)

# Write table
write.table(cellcounts, file="Cell Counts.csv",sep=",", col.names=NA)

## If you get the error: [estimateCellCounts] Combining user data with reference (flow sorted) data. Error in as(rv, class(v)): no method or default for coercing “logical” to “factor”, try the following patch then re-run the estimateCellCounts code.

ns.orig <- get(".harmonizeDataFrames", envir = asNamespace("minfi"))
.harmonizeDataFrames.quickfix <- function (x, y) 
{
    stopifnot(is(x, "DataFrame"))
    stopifnot(is(y, "DataFrame"))
    x.only <- setdiff(names(x), names(y))
    y.only <- setdiff(names(y), names(x))
    if (length(x.only) > 0) {
        df.add <- x[1, x.only]
        is.na(df.add[1, ]) <- TRUE
        y <- cbind(y, df.add)
    }
    if (length(y.only) > 0) {
        df.add <- data.frame(matrix(ncol = length(y.only), nrow = dim(x)[1]))
        names(df.add) <- y.only
        x <- cbind(x, df.add)
    }
    list(x = x, y = y[, names(x)])
}
environment(.harmonizeDataFrames.quickfix) <- environment(ns.orig)
attributes(.harmonizeDataFrames.quickfix) <- attributes(ns.orig)
assignInNamespace(".harmonizeDataFrames", .harmonizeDataFrames.quickfix, ns="minfi")
